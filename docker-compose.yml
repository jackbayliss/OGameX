x-ogamex-base: &x-ogamex-base
  build:
    context: .
    dockerfile: Dockerfile
    args:
      OPCACHE_ENABLE: "0"  # Disable opcache for development
      USE_USER: ${USE_USER_ARG:-yes}  # Defaults to "yes". Set to "no" for GitHub Actions.
  volumes:
    - .:/var/www
    - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
  environment:
    SERVICE_TAGS: dev
    SERVICE_NAME: app
  networks:
    - app-network

services:
  # MariaDB Service
  ogamex-db:
    image: mariadb:11.3.2-jammy
    container_name: ogamex-db
    restart: unless-stopped
    tty: true
    volumes:
      - ogame-dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    environment:
      MARIADB_DATABASE: laravel
      MARIADB_ROOT_PASSWORD: toor
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  # PHP Service
  ogamex-app:
    <<: *x-ogamex-base
    container_name: ogamex-app
    restart: unless-stopped
    tty: true
    environment:
      CONTAINER_ROLE: app
    working_dir: /var/www
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || [ $? -eq 56 ]"]
      interval: 10s
      timeout: 6s
      retries: 60
    depends_on:
      - ogamex-db

  # Scheduler
  ogamex-scheduler:
    <<: *x-ogamex-base
    container_name: ogamex-scheduler
    volumes:
      - .:/var/www/html
    environment:
      CONTAINER_ROLE: scheduler
    depends_on:
      ogamex-app:
        condition: service_healthy

  # Nginx Service
  ogamex-webserver:
    image: nginx:alpine
    container_name: ogamex-webserver
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www:cached
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/ssl/:/etc/nginx/ssl/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      ogamex-app:
        condition: service_healthy

  # PhpMyAdmin
  ogamex-phpmyadmin:
    image: phpmyadmin
    container_name: ogamex-phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=ogame-db
      - UPLOAD_LIMIT=1G
    networks:
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  ogame-dbdata:
    driver: local
